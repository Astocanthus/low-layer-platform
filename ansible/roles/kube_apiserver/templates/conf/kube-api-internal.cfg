# -----------------------------------------------------------------------------
# Frontend exposing the internal VIP for the Kubernetes API server
# -----------------------------------------------------------------------------
frontend kube_api_frontend
    # Bind the frontend to the internal VIP on port 443
    bind {{ vip_kubernetes_apiserver["internal"]["ip"] }}:443

    # Forward all requests to the backend handling kube-apiserver nodes
    default_backend kube_api_backend

# -----------------------------------------------------------------------------
# Backend pool containing all kube-apiserver nodes
# -----------------------------------------------------------------------------
backend kube_api_backend
    # Load-balance connections using round-robin strategy
    balance roundrobin

    # Enable TCP health checks on the backend servers
    option tcp-check

    # Perform a TCP connect check on the kube-apiserver port
    tcp-check connect port {{ kubernetes_apiserver_port }}

    # Dynamically add each kube-apiserver host with health check parameters
    {% for host in groups[haproxy_target_group] %}
    server {{ hostvars[host]["inventory_hostname"] }} {{ lookup("dig", hostvars[host]["inventory_hostname"]) }}:{{ kubernetes_apiserver_port }} check inter {{ haproxy_health_check_config["interval"] }}s rise {{ haproxy_health_check_config["rise"] }} fall {{ haproxy_health_check_config["fall"] }}
    {% endfor %}
