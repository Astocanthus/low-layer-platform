# Copyright (C) - LOW-LAYER
# Contact : contact@low-layer.com

---

# ============================================================================
# Install python3-kubernetes package
# ============================================================================
- name: Install python3-kubernetes to call API
  # Installs the python3-kubernetes package via rpm-ostree for API interaction
  community.general.rpm_ostree_pkg:
    name: 
      - "python3-kubernetes-{{ python_version_kubernetes }}"
    state: present
  register: kubernetes_install

- name: Restart node to apply python3-kubernetes
  # Reboots the node to apply newly installed Python packages
  ansible.builtin.reboot:
    reboot_timeout: 600
    pre_reboot_delay: 5
    post_reboot_delay: 10
  when: kubernetes_install.changed

# ============================================================================
# Flush handlers after reboot
# ============================================================================
- meta: flush_handlers
  # Ensures that any pending notifications are executed before continuing

# ============================================================================
# Retrieve Kubernetes token from Vault
# ============================================================================
- name: Read Kubernetes token from Vault
  # Fetches a Kubernetes OIDC token from Vault using userpass authentication
  community.hashi_vault.vault_read:
    url:         "{{ vault_addr }}"
    path:        "identity/oidc/token/{{ vault_oidc_client_id }}"
    mount_point: "kubernetes-userpass"
    auth_method: "userpass"
    username:    "{{ vault_oidc_username }}"
    password:    "{{ vault_oidc_password }}"
  register: vault_k8s_token
  until: vault_k8s_token is succeeded
  retries: 10
  delay: 10
  delegate_to: localhost
  become: false

# ============================================================================
# Apply labels and taints to Kubernetes node
# ============================================================================
- name: Apply labels and taints to Kubernetes node
  # Updates the node object in Kubernetes with provided labels and taints
  kubernetes.core.k8s:
    api_version: "v1"
    kind:        "Node"
    name:        "{{ inventory_hostname }}"
    host:        "https://{{ vip_kubernetes_apiserver['internal']['fqdn'] }}"
    api_key:     "{{ vault_k8s_token.data.data.token }}"
    ca_cert:     "{{ vault_agent_certs_path }}/kubernetes/ca.pem"
    validate_certs: true
    merge_type: merge
    definition:
      metadata:
        labels: "{{ kubernetes_node_labels | default({}) }}"
      spec:
        taints: "{{ kubernetes_node_taints | default([]) }}"
    state: present
  when: kubernetes_node_labels is defined or kubernetes_node_taints is defined